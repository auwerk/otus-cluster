{{- $fullName := include "demo-service.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "demo-service.labels" . | nindent 4 }}
spec:
  replicas: 2
  selector:
    matchLabels:
      {{- include "demo-service.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "demo-service.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "web"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:v{{ .Chart.AppVersion }}"
          env:
            - name: SERVER_PORT
              value: "{{ .Values.service.port | default 8080 }}"
            - name: APP_DB_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}
                  key: DB_URL
            - name: APP_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ $fullName }}-db"
                  key: USERNAME
                  optional: false
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ $fullName }}-db"
                  key: PASSWORD
                  optional: false
          ports:
            - name: web
              containerPort: {{ .Values.service.port | default 8080 }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: web
            initialDelaySeconds: 15
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: web
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /actuator/health/readiness
              port: web
            failureThreshold: 30
            periodSeconds: 10
